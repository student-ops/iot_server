version: "3.7"
services:
    influxdb:
        image: influxdb:2.0.7
        environment:
            DOCKER_INFLUXDB_INIT_MODE: setup
            DOCKER_INFLUXDB_INIT_USERNAME: ${INFLUXDB_USERNAME}
            DOCKER_INFLUXDB_INIT_PASSWORD: ${INFLUXDB_PASSWORD}
            DOCKER_INFLUXDB_INIT_ORG: iot
            DOCKER_INFLUXDB_INIT_BUCKET: ${INFLUXDB_BUCKET} 
            DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: ${INFLUXDB_TOKEN}

        ports:
            - "8086:8086"
    app:
        build: ./app
        ports:
            - "8080:8080"
        environment:
            DB_URL: http://influxdb:8086
            INFLUXDB_TOKEN: ${INFLUXDB_TOKEN}
            INFLUXDB_ORG: iot  
            INFLUXDB_BUCKET: ${INFLUXDB_BUCKET}
        depends_on:
            - influxdb
    grafana:
        image: grafana/grafana-oss:main
        ports:
            - 3000:3000
        depends_on:
            - influxdb
    # slack_bot:
    #     build: ./url_manage
    #     environment:
    #         IS_COMPOSE: true
    #         SLACK_BOT_OAUTH: ${SLACK_BOT_OAUTH}
    #     depends_on:
    #         - ngrok_app
    #         - ngrok_monitor
    # ngrok_app:
    #     container_name: ngrok_app
    #     image: wernight/ngrok:latest
    #     ports:
    #         - 4040:4040
    #     environment:
    #         - NGROK_AUTH=${NGROK_APP_AUTH}
    #         - NGROK_PROTOCOL=http
    #         - NGROK_PORT=app:8080
    # ngrok_monitor:
    #     container_name: ngrok_monitor
    #     image: wernight/ngrok:latest
    #     ports:
    #         - 4041:4040
    #     environment:
    #         - NGROK_AUTH=${NGROK_DB_AUTH}
    #         - NGROK_PROTOCOL=http
    #         - NGROK_PORT=influxdb:8086